- hosts: localhost
  gather_facts: yes
  become: true
  connection: local
  tasks:
    - name: get ec2
      ec2_instance_info:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        aws_security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
        ec2_region: "eu-west-3"
        filters:
          tag:instancemode: node
      register: ec2_node_info
    - debug:
        var: ec2_node_info.instances[0].public_dns_name
    - name: add ec2 ip to inv file
      lineinfile:
        path: ./nodeinv
        line: "{{ item.public_dns_name }}"
      loop: "{{ ec2_node_info.instances }}"
    - name: add vars section
      lineinfile:
        path: ./nodeinv
        line: "[kubenodes:vars]"
    - name: add ansible user line
      lineinfile:
        path: ./nodeinv
        line: "ansible_user=ubuntu"
    - name: add ansible key line
      lineinfile:
        path: ./nodeinv
        line: "ansible_ssh_private_key_file=/var/lib/jenkins/.ssh/cleyaws_rsa"
    - name: add ssh args line
      lineinfile:
        path: ./nodeinv
        line: "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
    - name: update inv file
      aws_s3:
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        aws_security_token: "{{ lookup('env', 'AWS_SESSION_TOKEN') }}"
        ec2_region: "eu-west-3"
        bucket: "{{ lookup('env', 'ANSIBLE_BUCKET_NAME') }}"
        mode: put
        object: /nodeinv
        src: ./nodeinv